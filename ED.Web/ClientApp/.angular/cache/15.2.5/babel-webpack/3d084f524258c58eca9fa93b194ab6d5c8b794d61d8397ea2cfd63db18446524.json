{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/cart.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CartComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"p\")(3, \"strong\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 3)(12, \"input\", 4);\n    i0.ɵɵlistener(\"ngModelChange\", function CartComponent_div_0_Template_input_ngModelChange_12_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(item_r1.quantity = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function CartComponent_div_0_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.updateItem(item_r1));\n    });\n    i0.ɵɵtext(14, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function CartComponent_div_0_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteItem(item_r1.id));\n    });\n    i0.ɵɵtext(16, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(item_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Price: $\", item_r1.price, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Quantity: \", item_r1.quantity, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Total Price: \", item_r1.quantity * item_r1.price, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", item_r1.quantity);\n  }\n}\nexport class CartComponent {\n  constructor(cartService) {\n    this.cartService = cartService;\n    this.cartItems = [];\n  }\n  ngOnInit() {\n    this.loadCartItems();\n  }\n  loadCartItems() {\n    this.cartService.getCartItems().subscribe(cartItems => {\n      this.cartItems = cartItems;\n    });\n  }\n  updateItem(item) {\n    this.cartService.updateCartItem(item.id, item).subscribe(() => {\n      // Reload cart items after update\n      this.loadCartItems();\n      this.cartService.cartItemsChanged.emit();\n    });\n  }\n  deleteItem(itemId) {\n    this.cartService.deleteCartItem(itemId).subscribe(() => {\n      // Reload cart items after delete\n      this.loadCartItems();\n      this.cartService.cartItemsChanged.emit();\n    });\n  }\n}\nCartComponent.ɵfac = function CartComponent_Factory(t) {\n  return new (t || CartComponent)(i0.ɵɵdirectiveInject(i1.CartService));\n};\nCartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CartComponent,\n  selectors: [[\"app-cart\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"cart-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"cart-item\"], [1, \"item-details\"], [1, \"item-actions\"], [\"type\", \"number\", 1, \"quantity-input\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n  template: function CartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, CartComponent_div_0_Template, 17, 5, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.cartItems);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAAAA,8BAAsD;IAEvCA,YAAe;IAAAA,iBAAS;IACnCA,yBAAG;IAAAA,YAAwB;IAAAA,iBAAI;IAC/BA,yBAAG;IAAAA,YAA6B;IAAAA,iBAAI;IACpCA,yBAAG;IAAAA,aAA6C;IAAAA,iBAAI;IAEtDA,+BAA0B;IACHA;MAAA;MAAA;MAAA,OAAaA,yCAAqB;IAAA,EAAP;IAAhDA,iBAA0E;IAC1EA,kCAAmC;IAA3BA;MAAA;MAAA;MAAA;MAAA,OAASA,yCAAgB;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;IAClDA,kCAAsC;IAA9BA;MAAA;MAAA;MAAA;MAAA,OAASA,4CAAmB;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;;;;IAR1CA,eAAe;IAAfA,kCAAe;IACvBA,eAAwB;IAAxBA,oDAAwB;IACxBA,eAA6B;IAA7BA,yDAA6B;IAC7BA,eAA6C;IAA7CA,4EAA6C;IAG3BA,eAA2B;IAA3BA,0CAA2B;;;ACApD,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAF/B,cAAS,GAAU,EAAE;EAE2B;EAEhDC,QAAQ;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAA,aAAa;IACX,IAAI,CAACF,WAAW,CAACG,YAAY,EAAE,CAACC,SAAS,CAACC,SAAS,IAAG;MACpD,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC5B,CAAC,CAAC;EACJ;EAEAC,UAAU,CAACC,IAAS;IAClB,IAAI,CAACP,WAAW,CAACQ,cAAc,CAACD,IAAI,CAACE,EAAE,EAAEF,IAAI,CAAC,CAACH,SAAS,CAAC,MAAK;MAC5D;MACA,IAAI,CAACF,aAAa,EAAE;MACpB,IAAI,CAACF,WAAW,CAACU,gBAAgB,CAACC,IAAI,EAAE;IAC1C,CAAC,CAAC;EACJ;EAEAC,UAAU,CAACC,MAAc;IACvB,IAAI,CAACb,WAAW,CAACc,cAAc,CAACD,MAAM,CAAC,CAACT,SAAS,CAAC,MAAK;MACrD;MACA,IAAI,CAACF,aAAa,EAAE;MACpB,IAAI,CAACF,WAAW,CAACU,gBAAgB,CAACC,IAAI,EAAE;IAC1C,CAAC,CAAC;EACJ;;AA7BWb,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR1BtB,+DAYM;;;MAZgBA,uCAAY","names":["i0","CartComponent","constructor","cartService","ngOnInit","loadCartItems","getCartItems","subscribe","cartItems","updateItem","item","updateCartItem","id","cartItemsChanged","emit","deleteItem","itemId","deleteCartItem","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\panch\\source\\repos\\ED.Api\\ED.Web\\ClientApp\\src\\app\\cart\\cart.component.html","C:\\Users\\panch\\source\\repos\\ED.Api\\ED.Web\\ClientApp\\src\\app\\cart\\cart.component.ts"],"sourcesContent":["<div *ngFor=\"let item of cartItems\" class=\"cart-item\">\r\n  <div class=\"item-details\">\r\n    <p><strong>{{ item.name }}</strong></p>\r\n    <p>Price: ${{ item.price }}</p>\r\n    <p>Quantity: {{ item.quantity }}</p>\r\n    <p>Total Price: {{ item.quantity * item.price }}</p>\r\n  </div>\r\n  <div class=\"item-actions\">\r\n    <input type=\"number\" [(ngModel)]=\"item.quantity\" class=\"quantity-input\" />\r\n    <button (click)=\"updateItem(item)\">Update</button>\r\n    <button (click)=\"deleteItem(item.id)\">Delete</button>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { CartService } from '../Services/cart.service';\r\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n  cartItems: any[] = [];\n\n  constructor(private cartService: CartService) { }\n\n  ngOnInit(): void {\n    this.loadCartItems();\n  }\n\n  loadCartItems(): void {\n    this.cartService.getCartItems().subscribe(cartItems => {\n      this.cartItems = cartItems;\n    });\n  }\n\n  updateItem(item: any): void {\n    this.cartService.updateCartItem(item.id, item).subscribe(() => {\n      // Reload cart items after update\n      this.loadCartItems();\n      this.cartService.cartItemsChanged.emit();\n    });\n  }\n\n  deleteItem(itemId: number): void {\n    this.cartService.deleteCartItem(itemId).subscribe(() => {\n      // Reload cart items after delete\n      this.loadCartItems();\n      this.cartService.cartItemsChanged.emit();\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}